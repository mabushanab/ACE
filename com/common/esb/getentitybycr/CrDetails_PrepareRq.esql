BROKER SCHEMA com.common.esb.getentitybycr


CREATE COMPUTE MODULE CrDetails_PrepareRq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot.Properties = InputProperties;
		SET OutputRoot.Properties.CodedCharSetId = '1208';
		SET OutputLocalEnvironment = InputLocalEnvironment; 
     	SET Environment.Variables.encoding = InputProperties.Encoding;
		SET OutputLocalEnvironment = InputLocalEnvironment;
		
		-- save MQMD required info in env
		SET Environment.Variables.GetEntityByCR.Properties=InputRoot.Properties;
		SET Environment.Variables.GetEntityByCR.MQMD=InputRoot.MQMD;
		SET Environment.Variables.GetEntityByCR.MQRFH2=InputRoot.MQRFH2;
		SET Environment.Variables.GetEntityByCR.Header=InputRoot.XMLNSC.*[<].Header;
		SET Environment.Variables.GetEntityByCR.ResponseMessageElementName = FIELDNAME(InputRoot.XMLNSC.*[<].Body.*[<]);
		
			
		DECLARE InBodyRef REFERENCE TO InputRoot.XMLNSC.*[<];
		SET Environment.Variables.GetEntityByCR.Header = InBodyRef.Header;
		SET Environment.Variables.GetEntityByCR.ServiceRequestName = FIELDNAME(InBodyRef);
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.GetEntityByCR.GetEntityByCRFlow;	
	
		
		SET Environment.Variables.GetEntityByCR.Header = InBodyRef.Header;
		SET Environment.Variables.GetEntityByCR.ServiceRequestName = FIELDNAME(InputRoot.XMLNSC.*[<]);
		SET OutputRoot.HTTPRequestHeader."Host" =  loadedPropertiesRef.Variables.ServiceHost;
		SET OutputRoot.HTTPRequestHeader."User-Agent" = 'Apache-HttpClient/4.1.1';
		SET OutputRoot.HTTPRequestHeader."Connection" = 'Keep-Alive';
		SET OutputRoot.HTTPRequestHeader."Content-Type" = 'application/json';
		
		SET OutputLocalEnvironment.Destination.HTTP.RequestLine.HTTPVersion = 'HTTP/1.1';
		SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method = 'POST';
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = loadedPropertiesRef.Variables.RestServiceURL;
		SET OutputRoot.JSON.Data.CRNumber = InputRoot.XMLNSC.*[<].Body.CRNumber;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
